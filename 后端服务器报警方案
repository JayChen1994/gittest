# 后端线上服务与报警方案

## 一:监控范围

>1.编码粗心导致的PHP Syntax/Parse Error (500). 程序代码中的PHP Fatal Error.(500)程序代码中的PHP Warning.页面找不到(404)等 **PHP相关错误的监控**
>
>2.**检测服务器是否宕机**
>
>3.**脚本来监控Linux系统的负载、CPU、内存、硬盘空间的检测**

## 二:实现方案
#### 1)针对PHP相关错误
我们所用的Laravel框架所有的异常处理都是通过App\Exceptions\Handler 类。这个类包含了两个方法：report 和 render。一个数组$dontReport，包含不需要被记录的异常类型。默认情况下，由 404 错误导致的异常结果并不会被记录到日志文件。你可以根据你的需求增加其它异常类型到这个数组中。

>report 方法用来记录异常或将它们发送到像是 BugSnag 的外部服务上。默认情况下，当异常被记录时，report 方法只是简单的发送异常到基类，当然你也可以随意的来记录这些异常。
>
>render 方法负责将指定的异常转换成 HTTP 响应再发送到浏览器。默认情况下，异常会被发送到基类并帮你生成响应。但你可以随意检查异常类型或返回自定义的响应
>
>**所以我们可以通过在render方法里编写检测异常的类型,然后给指定开发人员发送短信或者邮件**

```
/**
 * 呈现异常到 HTTP 响应。
 *
 * @param  \Illuminate\Http\Request  $request
 * @param  \Exception  $e
 * @return \Illuminate\Http\Response
 */
public function render($request, Exception $e)
{
    //可以执行一些你需要的逻辑,比如发送短信

    //return parent::render($request, $e);
}
```

#### 2) 检测服务器是否宕机
对于服务器来说在线率很重要，出现问题要能及时解决，但系统管理员不能一直守在电脑旁边，通过脚本监控网站出现问题及时通过mail通知管理员

#### 3) 采用Ganglia 跨平台的分布式监控系统工具
Ganglia主要是用来监控系统性能，如：cpu 、mem、硬盘利用率，I/O负载、网络流量情况等，通过曲线很容易见到每个节点的工作状态，对合理调整、分配系统资源，提高系统整体性能起到重要作用

#### 1.组成
>![屏幕快照 2017-06-17 上午9.36.13](media/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-06-17%20%E4%B8%8A%E5%8D%889.36.13.png)

由gmetad,rrdtool,Gmond,Apache,PHP以及一个展示的web

监控的集群节点的步骤如下:

>第一步：在要收集的数据的每个节点安装gmond，主要用来收集节点的信息以及存储信息(这里的存储信息在后面会讲解)

>第二步：只要部署在一台机器就可以了(部署在我们需要通过web访问的机器上)，主要用来轮询收集gmond的信息，并以某种形式存储到磁盘上。

>第三步：安装apache web服务器,以及php(由于gweb是php开发的)，构建gweb的执行环境

>第四步：安装gweb，以web的形式更清晰的展示刚刚收集的历史数据。

**工作简介**

![屏幕快照 2017-06-17 上午9.40.58](media/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-06-17%20%E4%B8%8A%E5%8D%889.40.58.png)

>1)gmond用于节点信息的收集和存储

>收集：一般用于收集本节点，用gmond.conf的udp_rev_channel来配置

>存储：并不是所有的gmond的都用来存储，可以找出其中的一台或者几台来存储即可，用gmond.conf的udp_send_channel来配置。

>各个gmond节点之间的信息发送接收主要用udp协议

>2)gmetad 用于轮询gmond节点存储的信息

>Gmetad可以配置轮询的gmond节点，通过source 参数配置。

>这里的个gmond节点就是上面udp_send_channel所配置的节点，可以是hostname或者ip

>3)rrdtool 用于存储数据，和画图

>rrdtool把gmetad轮询收集到的数据持久化磁盘文件中，并且还可以利用这些数据画图，更好的展示这些数据

#### Ganglia 的安装



